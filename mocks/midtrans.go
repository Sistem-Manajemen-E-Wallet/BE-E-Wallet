// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	midtranspay "e-wallet/utils/midtranspay"

	mock "github.com/stretchr/testify/mock"
)

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

// GetVaNumbers provides a mock function with given fields: transaction
func (_m *Service) GetVaNumbers(transaction midtranspay.Topup) (string, error) {
	ret := _m.Called(transaction)

	if len(ret) == 0 {
		panic("no return value specified for GetVaNumbers")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(midtranspay.Topup) (string, error)); ok {
		return rf(transaction)
	}
	if rf, ok := ret.Get(0).(func(midtranspay.Topup) string); ok {
		r0 = rf(transaction)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(midtranspay.Topup) error); ok {
		r1 = rf(transaction)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewService creates a new instance of Service. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewService(t interface {
	mock.TestingT
	Cleanup(func())
}) *Service {
	mock := &Service{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
