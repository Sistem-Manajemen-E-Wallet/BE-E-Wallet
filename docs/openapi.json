{
    "openapi": "3.0.0",
    "info": {
        "title": "E-WALLET API",
        "version": "1.0.0",
        "description": "documentation for e-wallet API",
        "contact": {
            "name": "Team 1 Alterra",
            "email": "ezabintangramadhan@gmail.com"
        },
        "license": {
            "name": "APACHE 2.0"
        }
    },
    "servers": [        
        {
            "description": "server for e-wallet project",
            "url": "https://auf.my.id"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "login user",
                "description": "",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "phone_number": {
                                        "type": "string",
                                        "description": "phone number user",
                                        "example": "08220321"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "pin user",
                                        "example": "123456"
                                    }
                                },
                                "required": [
                                    "phone_number",
                                    "pin"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/login"
                                },
                                "examples": {
                                    "success": {
                                        "description": "Login successful",
                                        "value":{
                                            "id": 1,
                                            "name":"user123",
                                            "token":"agaTwefhwoefh12314"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Login failed",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "description":{
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "failed": {
                                        "description": "Login failed",
                                        "value":{
                                            "status":"login failed",
                                            "description":"wrong username/password"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404":{
                        "description": "user not found. please input correctly.",
                    "content": {
                    "application/json":{
                        "schema":{
                            "type": "object",
                            "properties": {
                                "message":{
                                    "type": "string"
                                }
                            },
                            "example":{
                                "message":"user not found. please input correctly."
                            }
                        }
                    }
                }
                    },
                    "500":{
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/register/customer":{
            "post":{
                "tags": ["Auth"],
                "summary": "create new costumer",
                "description": "",
                "requestBody":{
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema":{
                                "$ref": "#/components/schemas/insert_user"
                            },
                            "example": {
                                "name":"tukimin",
                                "email":"tukimin@mail.com",
                                "phone_number":"08220321",                                
                                "pin":"123456",
                                "confirm_pin":"123456"
                            }
                        }
                    }
                },
                "responses": {
                    "201":{
                        "description": "successful register",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref": "#/components/responses/201"
                                },
                                "examples":{
                                    "successful_register":{
                                        "value":{
                                            "message":"register successful"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "$ref": "#/components/responses/400"
                    },
                    "404":{
                        "$ref": "#/components/responses/404"
                    },
                    "500":{
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/register/merchant":{
            "post":{
                "tags": ["Auth"],
                "summary": "create new merchant",
                "description": "",
                "requestBody":{
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema":{
                                "$ref": "#/components/schemas/insert_user"
                            },
                            "example": {
                                "name":"tukimin",
                                "email":"tukimin@mail.com",
                                "phone_number":"08220321",                                
                                "pin":"123456",
                                "confirm_pin":"123456"
                            }
                        }
                    }
                },
                "responses": {
                    "201":{
                        "description": "successful register",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref": "#/components/responses/201"
                                },
                                "examples":{
                                    "successful_register":{
                                        "value":{
                                            "message":"register successful"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "$ref": "#/components/responses/400"
                    },
                    "404":{
                        "$ref": "#/components/responses/404"
                    },
                    "500":{
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                {
                    "JWTAuth":[]
                }
                ],
                "tags": [
                    "users"
                ],
                "summary": "see profile user",
                "description": "see profile user by token id",
                "responses": {
                    "200": {
                        "description": "Success get profile user",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name":{
                                            "type": "string",
                                            "example": "tukimin"
                                        },
                                        "email":{
                                            "type": "string",
                                            "example":"tukimin@mail.com"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500":{
                        "$ref": "#/components/responses/500"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "JWTAuth":[]
                    }
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update existing user",
                "description": "update existing user by id",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/update_profile"
                            },
                            "examples": {
                                "update_user":{
                                    "value":{
                                        "name":"Eza",
                                        "email":"eza@mail.com",
                                        "phone_number":"0822232",
                                        "address":"jl.jalanin aja dulu"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful update",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref": "#/components/responses/200"
                                },
                                "examples":{
                                    "successful_update":{
                                        "value":{
                                            "message":"success update profile"
                                        }
                                    }
                               }
                           }
                        }
                    },
                    "400":{
                        "description": "wrong input",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "$ref": "#/components/responses/400"
                                },
                                "examples":{
                                    "failed_update":{
                                        "value":{
                                            "message":"failed update. input your changes correctly"
                                        }
                                    }
                               }
                            }
                        }
                    },
                    "500":{
                        "$ref": "#/components/responses/500"
                    }
                }
            },
            "delete":{
                "security": [
                    {
                        "JWTAuth":[]
                    }
                ],
                "tags": [
                    "users"
                ],
                "summary": "delete existing user",
                "description": "delete existing user by id",
                "responses": {
                    "200":{
                        "description": "successful delete user",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref": "#/components/responses/200"
                                },
                                "examples":{
                                    "successful_delete":{
                                        "value":{
                                            "message":"success delete user"
                                        }
                                    }
                               }
                           }
                        }
                    },
                    "404":{
                        "description": "user not found",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "$ref": "#/components/responses/404"
                                },
                                "examples":{
                                    "failed_delete":{
                                        "value":{
                                            "message":"failed delete. user not found"
                                        }
                                    }
                               }
                            }
                        }
                    },
                    "500":{
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/users/changeprofilepicture":{
            "post":{
                "security": [
                    {
                        "JWTAuth":[]
                    }
                ],
                "tags": ["users"],
                "summary": "Upload profile picture",
                "description": "Endpoint for upload user's profile picture",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "profile_picture": {
                                    "type": "string",
                                    "format": "binary",
                                    "description": "The profile picture file to be uploaded"
                                }
                            },
                            "required": ["profile_picture"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success upload profile picture",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile picture uploaded successfully"
                                        },
                                        "photoURL": {
                                            "type": "string",
                                            "example": "https://res.cloudinary.com/dikdesfng/image/upload/v1245564784/go-cloudinary/alfdbsaufpad.png"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/wallets":{
            "get":{
                "security": [
                    {
                        "JWTAuth":[]
                    }
                    ],
                    "tags": ["wallets"],
                "summary": "see balance user",
                "description": "see balance user by token id",
                "responses": {
                    "200": {
                        "description": "Success get balance user",
                        "content": {
                            "application/json":{
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name":{
                                            "type": "string",
                                            "example": "tukimin"
                                        },
                                        "balance":{
                                                "type": "integer",
                                                "example":50000
                                            }
                                        }
                                    }
                                }
                            }
                        },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "500":{
                        "$ref": "#/components/responses/500"
                    }
                }                
            }
        },
        "/transactions":{
            "post":{
                "security": [
                    {
                        "JWTAuth":[]
                    }
                ],
                "tags": ["transactions"],
                "summary": "create transaction by customer",
                "description": "create transaction between customer and merchant",
                "requestBody":{
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema":{
                                "$ref": "#/components/schemas/transaction"
                            }                           
                        }
                    }
                },                
                "responses": {
                    "200": {
                        "description": "success create transaction",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref": "#/components/responses/200"
                                },
                                "examples":{
                                    "successful_create":{
                                        "value":{
                                            "message":"success create transaction"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "wrong input",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "$ref": "#/components/responses/400"
                                },
                                "examples":{
                                    "failed_update":{
                                        "value":{
                                            "message":"failed create transaction. input your transaction correctly"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500":{
                        "$ref": "#/components/responses/500"
                    }
                }                
            },
            "get":{
                "security": [
                    {
                        "JWTAuth":[]
                    }
                ],
                "tags": ["transactions"],
                "summary": "get all transaction by merchant",
                "description": "get all transaction from customer to see by merchant",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "default": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200":{
                        "description": "success get all transaction",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "$ref": "#/components/schemas/all_transaction_responses"
                                },
                                "examples": {
                                    "example":{
                                        "value":[
                                            {
                                                "meta":{
                                                    "limit": 10,
                                                    "page": 2,
                                                    "totalItems": 31,
                                                    "totalPages": 4
                                                },
                                                "data":[
                                                    {
                                                        "order_id": 45,
                                                        "user_id": 5,
                                                        "product_id": 12,
                                                        "quantity": 1,
                                                        "total_cost": 10000,
                                                        "status_progress": "sudah diantar",
                                                        "status_payment": "success"    
                                                    },
                                                    {
                                                        "order_id": 11,
                                                        "user_id": 4,
                                                        "product_id": 11,
                                                        "quantity": 2,
                                                        "total_cost": 30000,                                                
                                                        "status_progress": "sedang dimasak",
                                                        "status_payment": "success"
                                                    }
                                                ]
                                            }                                            
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404":{
                        "$ref": "#/components/responses/404"
                    },
                    "500":{
                        "$ref": "#/components/responses/500"
                    }
                }
            },
            "put":{
                "security": [
                    {
                        "JWTAuth":[]
                    }
                ],
                "tags": ["transactions"],
                "summary": "update status progress",
                "description": "update transaction status progress by id",
                "requestBody":{
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema":{
                                "type": "object",
                                "properties": {
                                    "status_progress":{
                                        "type": "string",
                                        "example": "sedang diantar"
                                    }
                                },
                                "required": [
                                    "status_progress"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success update status_progress",
                        "content":{
                            "application/json":{
                                "schema":{
                                    "$ref": "#/components/responses/200"
                                },
                                "examples":{
                                    "successful_create":{
                                        "value":{
                                            "message":"success update status_progress"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "wrong input",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "$ref": "#/components/responses/400"
                                },
                                "examples":{
                                    "failed_update":{
                                        "value":{
                                            "message":"failed update status_progress. input your status correctly"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500":{
                        "$ref": "#/components/responses/500"
                    }
                }                
            }
        },
        "/products": {
            "get": {
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "tags": ["products"],
                "summary": "Get all products",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "messages": {
                                            "type": "string",
                                            "example": "success get all products"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "tags": ["products"],
                "summary": "Create a new product",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "messages": {
                                            "type": "string",
                                            "example": "Product created successfully"
                                        }
                                    },
                                    "example": {
                                        "messages": "product created sucessfully"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/{id}/images": {
            "post": {
                "summary": "Upload a product image by product id",
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "tags": ["products"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "product_image": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "The image file to be uploaded"
                                    }
                                },
                                "required": ["product_image"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product image uploaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "messages": {
                                            "type": "string",
                                            "example": "Product image uploaded successfully"
                                        }
                                    },
                                    "example": {
                                        "messages": "Product image uploaded successfully"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/products/{id}": {
            "get": {
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "tags": ["products"],
                "summary": "Get a product by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "messages": {
                                            "type": "string",
                                            "example": "success get product"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a product by ID",
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "tags": ["products"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PutProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "messages": {
                                            "type": "string",
                                            "example": "Product updated successfully"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "tags": ["products"],
                "summary": "Delete a product by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "messages": {
                                            "type": "string",
                                            "example": "Product deleted successfully"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },

        "/users/{id}/products": {
            "get": {
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "tags": ["products"],
                "summary": "Get all products owned by a user",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "messages": {
                                            "type": "string",
                                            "example": "blabla"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/histories":{
            "get":{
                "security": [
                    {
                        "JWTAuth":[]
                    }
                ],
                "tags": ["histories"],
                "summary": "get histories by token id",
                "description": "get histories by user_id from token id",
                "responses": {
                    "200":{
                        "description": "success get history",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "$ref": "#/components/schemas/histories"
                                },
                                "examples": {
                                    "success_get_history": {
                                        "value": {
                                            "message": "success get history",
                                            "data": [
                                                {
                                                    "id": 18,
                                                    "transaction_id": 10,
                                                    "created_at": "2024-06-04T09:42:11.082+07:00",
                                                    "trx_name": "ayam pudidi 5",
                                                    "type": "payment",
                                                    "amount": 3000,
                                                    "status": "success"
                                                },
                                                {
                                                    "id": 20,
                                                    "topup_id": 10,
                                                    "created_at": "2024-06-04T10:47:03.425+07:00",
                                                    "trx_name": "Bank BCA",
                                                    "type": "Top-Up",
                                                    "amount": 1,
                                                    "status": "paid"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404":{
                        "$ref": "#/components/responses/404"
                    },
                    "500":{
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/topups": {
            "post": {
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "tags": ["topups"],
                "summary": "Top up request with token id",
                "description": "Top up request with token id",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TopupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TopupResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "tags": [
                    "topups"
                ],
                "summary": "Get all customer topups",
                "description": "Get customer topups",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TopupGetAllResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/topups/{id}": {
            "get": {
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "tags": [
                    "topups"
                ],
                "summary": "Get topup by id",
                "description": "Get topup by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TopupGetByIdResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },

    "components": {
        "securitySchemes": {
            "JWTAuth": {
                "description": "token for admin",
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }

        },
        "parameters": {
            "id_homestay": {              
                "name": "id",
                "in": "path",
                "required": true,
                "description": "id homestay to get data",
                    "schema": {
                        "type": "integer",
                        "example":1
                        }
            }
        },
        "schemas": {
            "login": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    }
                }
            },
            "insert_user":{
                "type": "object",
                "properties": {
                    "name":{
                        "type": "string"
                    },
                    "email":{
                        "type": "string"
                    },
                    "phone_number":{
                        "type": "string"
                    },
                    "pin":{
                        "type": "string"
                    },
                    "confirm_pin":{
                        "type": "string"
                    }
                }
            },
            "update_profile": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "phone_number":{
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    }
                }
            },
            "transaction":{
                "type": "object",
                "properties": {  
                    "order_id": {
                        "type": "integer",
                        "example": 22
                    },                  
                    "product_id": {
                        "type": "integer",
                        "example": 12
                    },                   
                    "quantity": {
                        "type": "integer",
                        "example": 1
                    },
                    "additional":{
                        "type": "string",
                        "example": "gapake acar"
                    }
                },
                "required": ["product_id", "quantity"]
            },
            "all_transaction_responses":{
                "type": "object",
                "properties": {
                    "message":{
                        "type": "string",
                        "description": "success get all transaction"
                    },
                    "meta":{
                        "type": "object",
                        "description": "Pagination metadata",
                        "properties": {
                            "limit": {
                                "type": "integer",
                                "description": "Number of transactions per page (default: 10, maximum: 100)"
                            },
                            "page": {
                                "type": "integer",
                                "description": "Current page number (default: 1)"
                            },
                            "totalItems": {
                                "type": "integer",
                                "description": "Total number of transactions"
                            },
                            "totalPages": {
                                "type": "integer",
                                "description": "Total number of pages"
                            }
                        }
                    },
                    "data":{
                        "type": "array",
                        "description": "Array of transaction objects",
                        "items": {
                        "type": "object",
                        "properties":{
                            "order_id":{
                                "type": "integer"
                            },
                            "user_id":{
                                "type": "integer"
                            },
                            "product_id":{
                                "type": "integer"
                            },
                            "quantity": {
                                "type": "integer"
                            },
                            "total_cost": {
                                "type": "integer"
                            },
                            "status_progress": {
                                "type": "string"
                            },
                            "status_payment": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
            "history":{
                "type": "object",
                "properties": {
                    "id":{
                        "type": "integer",
                        "example": 1
                    },
                    "transaction_id":{
                        "type": "integer",
                        "example": 1
                    },
                    "topup_id":{
                        "type": "integer",
                        "example": 1
                    },
                    "created_at":{
                        "type": "string",
                        "example":"26 Mei 2024"
                    },
                    "trx_name":{
                        "type": "string",
                        "example":"pecel lele"
                    },
                    "type":{
                        "type": "string",
                        "example":"payment"
                    },
                    "amount":{
                        "type": "number",
                        "format": "float",
                        "example":50000.0
                    },
                    "status":{
                        "type": "string",
                        "example":"success"
                    }
                }
            },
            "histories":{
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "success get all history"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/history"
                        }
                    }
                }
            },
            "Product": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "product_name": {
                        "type": "string",
                        "example": "Sample Product"
                    },
                    "description": {
                        "type": "string",
                        "example": "Product Description"
                    },
                    "price": {
                        "type": "number",
                        "format": "integer",
                        "example": 25000
                    },
                    "product_images": {
                        "type": "string",
                        "example": "https://cloud.image.com/www"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "2020-05-05"
                    },
                    "updated_at": {
                        "type": "string",
                        "example": "2020-05-05"
                    }
                },
                "required": ["id", "name", "price", "description", "userId"]
            },
            "PostProductRequest": {
                "type": "object",
                "properties": {
                    "product_name": {
                        "type": "string",
                        "example": "Sample Product"
                    },
                    "description": {
                        "type": "string",
                        "example": "Product Description"
                    },
                    "price": {
                        "type": "number",
                        "format": "integer",
                        "example": 25000
                    }
                },
                "required": ["product_name", "price", "description", "userId"]
            },
            "PutProductRequest": {
                "type": "object",
                "properties": {
                    "product_name": {
                        "type": "string",
                        "example": "Sample Product"
                    },
                    "description": {
                        "type": "string",
                        "example": "Product Description"
                    },
                    "price": {
                        "type": "number",
                        "format": "integer",
                        "example": 25000
                    }
                },
                "required": ["product_name", "price", "description"]
            },
            "TopupRequest": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "number",
                        "format": "integer",
                        "example": 25000
                    },
                    "channel_bank": {
                        "type": "string",
                        "example": "BCA"
                    }
                },
                "required": ["amount", "channel_bank"]
            },
            "TopupResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Top up success"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "order_id": {
                                "type": "string",
                                "example": "order-2024-06-02-17:54:07-170865077"
                            },
                            "user_id": {
                              "type": "integer",
                              "example": 1
                            },
                            "amount": {
                                "type": "number",
                                "format": "integer",
                                "example": 25000
                            },
                            "type": {
                                "type": "string",
                                "example": "Bank Transfer"
                            },
                            "channel_bank": {
                                "type": "string",
                                "example": "BCA"
                            },
                            "va_numbers": {
                                "type": "string",
                                "example": "1234567890"
                            },
                            "status": {
                                "type": "string",
                                "example": "pending"
                            },
                            "created_at": {
                                "type": "string",
                                "example": "2020-05-05"
                            },
                            "updated_at": {
                                "type": "string",
                                "example": "2020-05-05"
                            }
                        }
                    }
                }
            },
            "TopupGetAllResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "success get all topups"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "order_id": {
                                    "type": "string",
                                    "example": "order-2024-06-02-17:54:07-170865077"
                                },
                                "user_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "amount": {
                                    "type": "number",
                                    "format": "integer",
                                    "example": 25000
                                },
                                "type": {
                                    "type": "string",
                                    "example": "Bank Transfer"
                                },
                                "channel_bank": {
                                    "type": "string",
                                    "example": "BCA"
                                },
                                "va_numbers": {
                                    "type": "string",
                                    "example": "1234567890"
                                },
                                "status": {
                                    "type": "string",
                                    "example": "pending"
                                },
                                "created_at": {
                                    "type": "string",
                                    "example": "2020-05-05"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "example": "2020-05-05"
                                }
                            }
                        }
                    }
                }
            },
            "TopupGetByIdResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "success get topup by id"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "order_id": {
                                "type": "string",
                                "example": "order-2024-06-02-17:54:07-170865077"
                            },
                            "user_id": {
                                "type": "integer",
                                "example": 1
                            },
                            "amount": {
                                "type": "number",
                                "format": "integer",
                                "example": 25000
                            },
                            "type": {
                                "type": "string",
                                "example": "Bank Transfer"
                            },
                            "channel_bank": {
                                "type": "string",
                                "example": "BCA"
                            },
                            "va_numbers": {
                                "type": "string",
                                "example": "1234567890"
                            },
                            "status": {
                                "type": "string",
                                "example": "pending"
                            },
                            "created_at": {
                                "type": "string",
                                "example": "2020-05-05"
                            },
                            "updated_at": {
                                "type": "string",
                                "example": "2020-05-05"
                            }
                        }
                    }
                }
            }
        },
        "responses": {
            "200":{
                "description": "success Process data",
                "content": {
                    "application/json":{
                        "schema":{
                            "type": "object",
                            "properties": {
                                "message":{
                                    "type": "string"
                                }                                
                            }
                        }
                    }
                }
            },
            "201":{
                "description": "success create data",
                "content": {
                    "application/json":{
                        "schema":{
                            "type": "object",
                            "properties": {
                                "message":{
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "400":{
                "description": "bad request from user",
                "content": {
                    "application/json":{
                        "schema":{
                            "type": "object",
                            "properties": {
                                "message":{
                                    "type": "string"
                                }
                            },
                            "example":{
                                "message":"Process failed. Please check your input"
                            }
                        }
                    }
                }
            },
            "404":{
                "description": "page not found or wrong url",
                "content": {
                    "application/json":{
                        "schema":{
                            "type": "object",
                            "properties": {
                                "message":{
                                    "type": "string"
                                }
                            },
                            "example":{
                                "message":"procces failed. page not found or wrong url"
                            }
                        }
                    }
                }
            },
            "500":{
                "description": "error procces on server",
                "content": {
                    "application/json":{
                        "schema":{
                            "type": "object",
                            "properties": {
                                "message":{
                                    "type": "string"
                                }
                            },
                            "example":{
                                "message": "procces failed. error internal server"
                            }
                        }
                    }
                }
            }
        }
    }
}